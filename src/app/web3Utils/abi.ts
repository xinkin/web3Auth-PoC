export const abi = [
  {
    inputs: [
      { internalType: "address", name: "_signer", type: "address" },
      { internalType: "address", name: "_trustedEntity", type: "address" },
      { internalType: "address payable", name: "_adminVault", type: "address" },
      { internalType: "address", name: "_baseStableCoin", type: "address" },
      {
        internalType: "address[]",
        name: "_whitlistedTokens",
        type: "address[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  { inputs: [], name: "AdminCanNotBecomeSigner", type: "error" },
  { inputs: [], name: "AdminVaultCanNotBeSigner", type: "error" },
  { inputs: [], name: "AdminVaultCanNotBeZero", type: "error" },
  { inputs: [], name: "BaseStableCoinAddressCanNotBeZero", type: "error" },
  { inputs: [], name: "BuyerCanNotBeAdminVault", type: "error" },
  { inputs: [], name: "BuyerCanNotBeNonProfit", type: "error" },
  { inputs: [], name: "BuyerCanNotBeZero", type: "error" },
  { inputs: [], name: "DonorCanNotBeZero", type: "error" },
  { inputs: [], name: "ETHTransferFailed", type: "error" },
  { inputs: [], name: "EmptyArray", type: "error" },
  { inputs: [], name: "InsufficientETHSent", type: "error" },
  { inputs: [], name: "InvalidDonorAddress", type: "error" },
  { inputs: [], name: "InvalidNonProftiVault", type: "error" },
  { inputs: [], name: "InvalidShortString", type: "error" },
  { inputs: [], name: "InvalidSignature", type: "error" },
  { inputs: [], name: "NonProfitCanNotBeZero", type: "error" },
  { inputs: [], name: "OnlyTrustedEntityAllowed", type: "error" },
  { inputs: [], name: "PaymentIdAlreadyProcessed", type: "error" },
  { inputs: [], name: "SellerCanNotBeZero", type: "error" },
  {
    inputs: [],
    name: "SettlementsArrayLengthMismatchingNonprofitArrayLength",
    type: "error",
  },
  { inputs: [], name: "SignatureExpired", type: "error" },
  { inputs: [], name: "SignerCanNotBeZero", type: "error" },
  { inputs: [], name: "SignerNotSet", type: "error" },
  {
    inputs: [{ internalType: "string", name: "str", type: "string" }],
    name: "StringTooLong",
    type: "error",
  },
  { inputs: [], name: "TokenCanNotBeZero", type: "error" },
  { inputs: [], name: "TokenNotWhitelistedOrBaseStableCoin", type: "error" },
  { inputs: [], name: "TrustedEntityCanNotBeAdmin", type: "error" },
  { inputs: [], name: "TrustedEntityCanNotBeAdminVault", type: "error" },
  { inputs: [], name: "TrustedEntityCanNotBeSigner", type: "error" },
  { inputs: [], name: "TrustedEntityCanNotBeZero", type: "error" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newVault",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "AdminVaultUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "BaseStableCoinUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "donor",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "nonProfitVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum MVMNTManager.DonationType",
        name: "donationType",
        type: "uint8",
      },
    ],
    name: "DonationReceived",
    type: "event",
  },
  { anonymous: false, inputs: [], name: "EIP712DomainChanged", type: "event" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "nonProfit",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nonProfitVault",
        type: "address",
      },
    ],
    name: "NonProfitAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "points",
        type: "uint256",
      },
    ],
    name: "PointsEarned",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "productId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "buyer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "adminShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "hasDonation",
        type: "bool",
      },
    ],
    name: "ProductSold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldSigner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "removedBy",
        type: "address",
      },
    ],
    name: "TokenRemovedFromWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "addedBy",
        type: "address",
      },
    ],
    name: "TokenWhitelisted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldTrustedEntity",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newTrustedEntity",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "changedBy",
        type: "address",
      },
    ],
    name: "TrustedEntityUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "NATIVE_TOKEN",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminVault",
    outputs: [{ internalType: "address payable", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "baseStableCoin",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "productId", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "adminShare", type: "uint256" },
          { internalType: "uint256", name: "buyerPoints", type: "uint256" },
          { internalType: "uint256", name: "sellerPoints", type: "uint256" },
          { internalType: "uint256", name: "paymentId", type: "uint256" },
          { internalType: "uint256", name: "donationAmount", type: "uint256" },
          { internalType: "address", name: "nonProfitVault", type: "address" },
        ],
        internalType: "struct MVMNTManager.PaymentBatchInputParams[]",
        name: "_payments",
        type: "tuple[]",
      },
      {
        components: [
          { internalType: "address", name: "buyer", type: "address" },
          { internalType: "address", name: "seller", type: "address" },
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "expiry", type: "uint256" },
          { internalType: "bytes", name: "sign", type: "bytes" },
        ],
        internalType: "struct MVMNTManager.CommonBatchInputParams",
        name: "_common",
        type: "tuple",
      },
    ],
    name: "batchPay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "createNonProfitVault",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_nonProfitVault", type: "address" },
      { internalType: "address", name: "_token", type: "address" },
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "uint256", name: "_points", type: "uint256" },
      { internalType: "uint256", name: "_paymentId", type: "uint256" },
      { internalType: "uint256", name: "_expiry", type: "uint256" },
      { internalType: "bytes", name: "_sign", type: "bytes" },
    ],
    name: "donate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "donations",
    outputs: [
      { internalType: "address", name: "donor", type: "address" },
      { internalType: "address", name: "nonProfitVault", type: "address" },
      { internalType: "address", name: "token", type: "address" },
      { internalType: "uint256", name: "amount", type: "uint256" },
      {
        internalType: "enum MVMNTManager.DonationType",
        name: "donationType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "eip712Domain",
    outputs: [
      { internalType: "bytes1", name: "fields", type: "bytes1" },
      { internalType: "string", name: "name", type: "string" },
      { internalType: "string", name: "version", type: "string" },
      { internalType: "uint256", name: "chainId", type: "uint256" },
      { internalType: "address", name: "verifyingContract", type: "address" },
      { internalType: "bytes32", name: "salt", type: "bytes32" },
      { internalType: "uint256[]", name: "extensions", type: "uint256[]" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    name: "isPaymentIdProcessed",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "isWhitelistedToken",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "uint256", name: "productId", type: "uint256" },
          { internalType: "uint256", name: "price", type: "uint256" },
          { internalType: "uint256", name: "adminShare", type: "uint256" },
          { internalType: "address", name: "buyer", type: "address" },
          { internalType: "uint256", name: "buyerPoints", type: "uint256" },
          { internalType: "address", name: "seller", type: "address" },
          { internalType: "uint256", name: "sellerPoints", type: "uint256" },
          { internalType: "uint256", name: "paymentId", type: "uint256" },
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "donationAmount", type: "uint256" },
          { internalType: "address", name: "nonProfitVault", type: "address" },
          { internalType: "uint256", name: "expiry", type: "uint256" },
          { internalType: "bytes", name: "sign", type: "bytes" },
        ],
        internalType: "struct MVMNTManager.PaymentInputParams",
        name: "_payment",
        type: "tuple",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recurringDonation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "_tokens", type: "address[]" }],
    name: "removeWhitelistTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "revertDonation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address payable", name: "_adminVault", type: "address" },
    ],
    name: "setAdminVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_baseStableCoin", type: "address" },
    ],
    name: "setBaseStableCoin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_signer", type: "address" }],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_trustedEntity", type: "address" },
    ],
    name: "setTrustedEntity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "adminShare", type: "uint256" },
          {
            internalType: "uint256",
            name: "nonProfitWithdrawableFunds",
            type: "uint256",
          },
        ],
        internalType: "struct INonProfitVault.Settlement[]",
        name: "_settlements",
        type: "tuple[]",
      },
      { internalType: "address", name: "_nonProfitVault", type: "address" },
    ],
    name: "settleDonation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "address", name: "token", type: "address" },
          { internalType: "uint256", name: "adminShare", type: "uint256" },
          {
            internalType: "uint256",
            name: "nonProfitWithdrawableFunds",
            type: "uint256",
          },
        ],
        internalType: "struct INonProfitVault.Settlement[][]",
        name: "_settlements",
        type: "tuple[][]",
      },
      {
        internalType: "address[]",
        name: "_nonProfitVaults",
        type: "address[]",
      },
    ],
    name: "settleDonationBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "signer",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "newOwner", type: "address" }],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedEntity",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address[]", name: "_tokens", type: "address[]" }],
    name: "whitelistTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "_tokens", type: "address[]" },
      {
        internalType: "address[]",
        name: "_nonProfitVaults",
        type: "address[]",
      },
    ],
    name: "withdrawMaxBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  { stateMutability: "payable", type: "receive" },
];
